services:
  spring-app:
    build: .
    container_name: spring-ai-app
    ports:
      - "8081:8081"
    environment:
      SPRING_AI_VECTORSTORE_CHROMA_CLIENT_HOST: http://chroma
      SPRING_AI_VECTORSTORE_CHROMA_CLIENT_PORT: 8000
      SPRING_AI_OLLAMA_BASE_URL: http://host.docker.internal:11434
    networks:
      - spring-ai-net
    depends_on:
      - chroma-init

  chroma:
    image: chromadb/chroma:0.4.24
    container_name: chroma
    environment:
      IS_PERSISTENT: "TRUE"
      ANONYMIZED_TELEMETRY: "FALSE"
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/data   # official image persists under /data
    networks:
      - spring-ai-net
    healthcheck:
      test: [ "CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/v1/heartbeat', timeout=10)" ]
      interval: 10s
      timeout: 5s
      retries: 5

  chroma-init:
    image: chromadb/chroma:0.4.24
    container_name: chroma-init
    depends_on:
      chroma:
        condition: service_healthy
    networks:
      - spring-ai-net
    command: >
      python -c "
      import json,urllib.request,urllib.error,sys;
      url='http://chroma:8000/api/v1/collections';
      data=json.dumps({'name':'demo'}).encode();
      req=urllib.request.Request(url,data=data,headers={'Content-Type':'application/json'});
      try:
          print(urllib.request.urlopen(req,timeout=10).read().decode())
      except urllib.error.HTTPError as e:
          print(e.read().decode()); sys.exit(0)
      "
    restart: "no"

volumes:
  chroma_data:

networks:
  spring-ai-net:
    driver: bridge
